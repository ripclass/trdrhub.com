[pytest]
# Pytest configuration for LCopilot Trust Platform regression tests

# Test discovery patterns
python_files = test_*.py
python_classes = Test*
python_functions = test_*

# Test directories
testpaths = tests

# Markers for categorizing tests
markers =
    security: Security-related tests (AWS, Redis, file upload, S3)
    integration: End-to-end integration tests
    regression: All regression tests
    rate_limiting: Rate limiting tests
    job_cleanup: Job cleanup and lifecycle tests
    error_handling: Error standardization tests
    correlation: Correlation ID tracking tests
    slow: Tests that take more than 5 seconds
    critical: Must-pass tests for production deployment
    async: Tests for async operations
    mock: Tests that use mocking extensively

# Coverage configuration
addopts =
    --strict-markers
    --verbose
    --tb=short
    --color=yes

# Coverage exclusions
[coverage:run]
branch = True
source = .
omit =
    */tests/*
    */test_*.py
    */__pycache__/*
    */venv/*
    */migrations/*
    */stubs/*
    */fixtures/*
    setup.py
    conftest.py

[coverage:report]
exclude_lines =
    pragma: no cover
    def __repr__
    if self.debug:
    if settings.DEBUG
    raise AssertionError
    raise NotImplementedError
    if 0:
    if __name__ == .__main__.:
    if TYPE_CHECKING:
    class .*\bProtocol\):
    @(abc\.)?abstractmethod

# HTML report settings
[coverage:html]
directory = htmlcov

# Test timeout configuration
timeout = 300
timeout_method = thread

# Logging configuration
log_cli = true
log_cli_level = INFO
log_cli_format = %(asctime)s [%(levelname)8s] %(name)s - %(message)s
log_cli_date_format = %Y-%m-%d %H:%M:%S

# Capture settings
capture = no

# Parallel execution
[pytest-xdist]
looponfail = False

# Warning filters
filterwarnings =
    ignore::DeprecationWarning
    ignore::PendingDeprecationWarning
    ignore::ResourceWarning